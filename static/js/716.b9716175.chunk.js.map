{"version":3,"file":"static/js/716.b9716175.chunk.js","mappings":"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","sources":["constants/api.js","api/api.js","components/MovieDetails/MovieCast/CastList/CastList.styled.js","components/MovieDetails/MovieCast/CastList/CastList.jsx","components/MovieDetails/MovieCast/MovieCast.jsx","components/Shared/Message.styled.js"],"sourcesContent":["export const API_BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'e915ca6542c1415913257f822128d2ab';\n","import axios from 'axios';\nimport { API_BASE_URL, API_KEY } from 'constants/api';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nexport const getTrending = async () => {\n  const url = '/trending/movie/day';\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.results;\n};\n\nexport const getMovies = async searchQuery => {\n  const url = '/search/movie';\n  const params = {\n    api_key: API_KEY,\n    query: searchQuery,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.results;\n};\n\nexport const getMovie = async movieID => {\n  const url = `/movie/${movieID}`;\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data;\n};\n\nexport const getCast = async movieID => {\n  const url = `/movie/${movieID}/credits`;\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.cast;\n};\n\nexport const getReviews = async movieID => {\n  const url = `/movie/${movieID}/reviews`;\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.results;\n};\n","import styled from 'styled-components';\n\nexport const StyledCastList = styled.ul`\n  display: grid;\n  gap: 20px;\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n\n  list-style: none;\n\n  margin: ${({ theme }) => theme.space[0]};\n  padding: ${({ theme }) => theme.space[0]};\n`;\n\nexport const CastItem = styled.li`\n  padding-bottom: ${({ theme }) => theme.space[4]};\n\n  text-align: center;\n\n  background-color: ${({ theme }) => theme.colors.lightBG};\n\n  border: ${({ theme }) => theme.borders.generic};\n  border-radius: ${({ theme }) => theme.radii.generic};\n\n  overflow: hidden;\n`;\n\nexport const CastImage = styled.img`\n  display: block;\n\n  width: 100%;\n  height: auto;\n  margin-bottom: ${({ theme }) => theme.space[4]};\n\n  background-color: ${({ theme }) => theme.colors.whiteBG};\n\n  object-fit: cover;\n`;\n\nexport const ArtistName = styled.p`\n  margin: ${({ theme }) => theme.space[0]};\n  margin-bottom: ${({ theme }) => theme.space[3]};\n\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n`;\n\nexport const Character = styled.p`\n  margin: ${({ theme }) => theme.space[0]};\n`;\n","import PropTypes from 'prop-types';\nimport {\n  StyledCastList,\n  CastImage,\n  CastItem,\n  ArtistName,\n  Character,\n} from './CastList.styled';\nimport noImage from 'images/no-image.png';\n\nexport const CastList = ({ castData }) => (\n  <StyledCastList>\n    {castData.map(({ cast_id, name, profile_path, character }) => (\n      <CastItem key={cast_id}>\n        <CastImage\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w342${profile_path}`\n              : noImage\n          }\n          alt={name}\n          width={230}\n          height={345}\n        />\n        <ArtistName>{name}</ArtistName>\n        <Character>\n          {character ? `Character: ${character}` : `Character not specified`}\n        </Character>\n      </CastItem>\n    ))}\n  </StyledCastList>\n);\n\nCastList.propTypes = {\n  castData: PropTypes.array.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'api/api';\nimport { CastList } from './CastList/CastList';\nimport { Message } from 'components/Shared/Message.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieCast = () => {\n  const { movieID } = useParams();\n\n  const [castData, setCastData] = useState(null);\n  const [status, setStatus] = useState('pending');\n\n  useEffect(() => {\n    getCast(movieID)\n      .then(result => {\n        setCastData(result);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n  }, [movieID]);\n\n  if (status === 'pending') return <Loader />;\n  if (status === 'rejected')\n    return <Message>Ooops, something went wrong</Message>;\n  if (status === 'resolved' && castData.length === 0)\n    return <Message>There is no cast information for that movie</Message>;\n  if (status === 'resolved') return <CastList castData={castData} />;\n};\n\nexport default MovieCast;\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  margin: ${({ theme }) => theme.space[0]};\n  padding: ${({ theme }) => theme.space[5]} ${({ theme }) => theme.space[0]};\n\n  font-size: ${({ theme }) => theme.fontSizes.l};\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n  text-align: center;\n`;\n"],"names":["API_KEY","axios","getTrending","params","api_key","queryData","status","Error","data","results","getMovies","searchQuery","query","getMovie","movieID","url","getCast","cast","getReviews","StyledCastList","styled","theme","space","CastItem","colors","lightBG","borders","generic","radii","CastImage","whiteBG","ArtistName","fontSizes","m","fontWeights","semiBold","Character","CastList","castData","map","cast_id","name","profile_path","character","src","noImage","alt","width","height","useParams","useState","setCastData","setStatus","useEffect","then","result","catch","Loader","length","Message","l"],"sourceRoot":""}