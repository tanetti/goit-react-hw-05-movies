{"version":3,"file":"static/js/544.34f11176.chunk.js","mappings":"8SACaA,EAAU,mCCEvBC,EAAAA,EAAAA,SAAAA,QDH4B,gCCKrB,IAAMC,EAAW,mCAAG,4FACb,sBACNC,EAAS,CACbC,QAASJ,GAHc,UAMDC,EAAAA,EAAAA,GALZ,sBAKuB,CAAEE,OAAAA,IANZ,UAQC,OAAb,QAFPE,EANmB,cAQZ,IAATA,OAAA,EAAAA,EAAWC,QARU,sBAQY,IAAIC,MARhB,gCAUlBF,EAAUG,KAAKC,SAVG,2CAAH,qDAaXC,EAAS,mCAAG,WAAMC,GAAN,+EACX,gBACNR,EAAS,CACbC,QAASJ,EACTY,MAAOD,GAJc,UAOCV,EAAAA,EAAAA,GANZ,gBAMuB,CAAEE,OAAAA,IAPd,UASG,OAAb,QAFPE,EAPiB,cASV,IAATA,OAAA,EAAAA,EAAWC,QATQ,sBASc,IAAIC,MATlB,gCAWhBF,EAAUG,KAAKC,SAXC,2CAAH,sDAcTI,EAAQ,mCAAG,WAAMC,GAAN,kFAChBC,EADgB,iBACAD,GAChBX,EAAS,CACbC,QAASJ,GAHW,UAMEC,EAAAA,EAAAA,GAAMc,EAAK,CAAEZ,OAAAA,IANf,UAQI,OAAb,QAFPE,EANgB,cAQT,IAATA,OAAA,EAAAA,EAAWC,QARO,sBAQe,IAAIC,MARnB,gCAUfF,EAAUG,MAVK,2CAAH,sDAaRQ,EAAO,mCAAG,WAAMF,GAAN,kFACfC,EADe,iBACCD,EADD,YAEfX,EAAS,CACbC,QAASJ,GAHU,UAMGC,EAAAA,EAAAA,GAAMc,EAAK,CAAEZ,OAAAA,IANhB,UAQK,OAAb,QAFPE,EANe,cAQR,IAATA,OAAA,EAAAA,EAAWC,QARM,sBAQgB,IAAIC,MARpB,gCAUdF,EAAUG,KAAKS,MAVD,2CAAH,sDAaPC,EAAU,mCAAG,WAAMJ,GAAN,kFAClBC,EADkB,iBACFD,EADE,YAElBX,EAAS,CACbC,QAASJ,GAHa,UAMAC,EAAAA,EAAAA,GAAMc,EAAK,CAAEZ,OAAAA,IANb,UAQE,OAAb,QAFPE,EANkB,cAQX,IAATA,OAAA,EAAAA,EAAWC,QARS,sBAQa,IAAIC,MARjB,gCAUjBF,EAAUG,KAAKC,SAVE,2CAAH,qD,sGCvDVU,EAAYC,EAAAA,GAAAA,GAAH,2IAGA,qBAAGC,MAAkBC,OAAOC,OAA5B,IAEV,qBAAGF,MAAkBG,QAAQC,OAA7B,IACO,qBAAGJ,MAAkBK,MAAMD,OAA3B,IAKNE,GAAkBP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,kNAGR,qBAAGC,MAAkBQ,MAAM,EAA3B,IAIH,qBAAGR,MAAkBS,YAAYC,QAAjC,IAGD,qBAAGV,MAAkBW,YAAYC,KAAjC,IAIH,qBAAGZ,MAAkBC,OAAOY,UAA5B,IAIAC,EAAaf,EAAAA,GAAAA,IAAH,yJAKJ,qBAAGC,MAAkBQ,MAAM,EAA3B,IAEG,qBAAGR,MAAkBC,OAAOc,OAA5B,I,kBClCTC,EAAY,SAAC,GAAoD,IAAD,IAAjDC,MAASC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,eAAgBC,EAAoB,EAApBA,YACjDC,GAAkBC,EAAAA,EAAAA,MAClBC,EAAS,kBAAcL,GAE7B,OACE,SAACpB,EAAD,WACE,UAACQ,EAAD,CAAiBkB,GAAID,EAAWE,MAAOJ,EAAvC,WACE,SAACP,EAAD,CACEY,IACEN,EAAW,yCAC2BA,GAClCO,EAENC,IAAKT,EACLU,MAAO,IACPC,OAAQ,MAETX,MAIR,ECxBYY,EAAmBhC,EAAAA,GAAAA,GAAH,mLAKjB,qBAAGC,MAAkBQ,MAAM,EAA3B,IACC,qBAAGR,MAAkBQ,MAAM,EAA3B,ICJAwB,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACxB,SAACF,EAAD,UACGE,EAAWC,KAAI,SAAAjB,GAAK,OACnB,SAACD,EAAD,CAA0BC,MAAOA,GAAjBA,EAAMC,GADH,KAFC,C,qECFbiB,E,OAAUpC,GAAAA,EAAH,8HACR,qBAAGC,MAAkBQ,MAAM,EAA3B,IACC,qBAAGR,MAAkBQ,MAAM,EAA3B,IAAiC,qBAAGR,MAAkBQ,MAAM,EAA3B,IAE/B,qBAAGR,MAAkBoC,UAAUC,CAA/B,IACE,qBAAGrC,MAAkBS,YAAYC,QAAjC,G,uGCLJ4B,EAAYvC,EAAAA,GAAAA,GAAH,4JACV,qBAAGC,MAAkBQ,MAAM,EAA3B,IACC,qBAAGR,MAAkBQ,MAAM,EAA3B,IAAiC,qBAAGR,MAAkBQ,MAAM,EAA3B,IAE/B,qBAAGR,MAAkBoC,UAAUC,CAA/B,IACE,qBAAGrC,MAAkBS,YAAYC,QAAjC,IAKJ6B,EAAkBxC,EAAAA,GAAAA,GAAH,6N,8FCVfyC,E,OAAUzC,GAAAA,QAAH,4DAEP,qBAAGC,MAAkBQ,MAAM,EAA3B,I,0HC+Bb,UA3Ba,WACX,OAAoCiC,EAAAA,EAAAA,UAAS,MAA7C,eAAOR,EAAP,KAAmBS,EAAnB,KACA,GAA4BD,EAAAA,EAAAA,UAAS,WAArC,eAAOxD,EAAP,KAAe0D,EAAf,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACR/D,EAAAA,EAAAA,MACGgE,MAAK,SAAAC,GACJJ,EAAcI,GACdH,EAAU,WACX,IACAI,OAAM,kBAAMJ,EAAU,WAAhB,GACV,GAAE,KAGD,SAAC,IAAD,WACE,UAAC,IAAD,YACE,SAAC,IAAD,6BACY,YAAX1D,IAAwB,SAAC,IAAD,IACb,aAAXA,IACC,SAAC,IAAD,0CAEU,aAAXA,IAAyB,SAAC,IAAD,CAAYgD,WAAYA,QAIzD,C","sources":["constants/api.js","api/api.js","components/MoviesList/MovieLink/MovieLink.styled.js","components/MoviesList/MovieLink/MovieLink.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/Shared/Message.styled.js","components/Shared/PageTitle.js","components/Shared/Section.styled.js","pages/Home/Home.jsx"],"sourcesContent":["export const API_BASE_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'e915ca6542c1415913257f822128d2ab';\n","import axios from 'axios';\nimport { API_BASE_URL, API_KEY } from 'constants/api';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nexport const getTrending = async () => {\n  const url = '/trending/movie/day';\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.results;\n};\n\nexport const getMovies = async searchQuery => {\n  const url = '/search/movie';\n  const params = {\n    api_key: API_KEY,\n    query: searchQuery,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.results;\n};\n\nexport const getMovie = async movieID => {\n  const url = `/movie/${movieID}`;\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data;\n};\n\nexport const getCast = async movieID => {\n  const url = `/movie/${movieID}/credits`;\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.cast;\n};\n\nexport const getReviews = async movieID => {\n  const url = `/movie/${movieID}/reviews`;\n  const params = {\n    api_key: API_KEY,\n  };\n\n  const queryData = await axios(url, { params });\n\n  if (queryData?.status !== 200) throw new Error();\n\n  return queryData.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieItem = styled.li`\n  text-align: center;\n\n  background-color: ${({ theme }) => theme.colors.lightBG};\n\n  border: ${({ theme }) => theme.borders.generic};\n  border-radius: ${({ theme }) => theme.radii.generic};\n\n  overflow: hidden;\n`;\n\nexport const StyledMovieLink = styled(Link)`\n  display: block;\n\n  padding-bottom: ${({ theme }) => theme.space[4]};\n\n  color: inherit;\n\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n  text-decoration: none;\n\n  transition: ${({ theme }) => theme.transitions.color};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.mainAccent};\n  }\n`;\n\nexport const MovieImage = styled.img`\n  display: block;\n\n  width: 100%;\n  height: auto;\n  margin-bottom: ${({ theme }) => theme.space[4]};\n\n  background-color: ${({ theme }) => theme.colors.whiteBG};\n\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledMovieLink, MovieImage, MovieItem } from './MovieLink.styled';\nimport noImage from 'images/no-image.png';\n\nexport const MovieLink = ({ movie: { id, original_title, poster_path } }) => {\n  const currentLocation = useLocation();\n  const movieLink = `/movies/${id}`;\n\n  return (\n    <MovieItem>\n      <StyledMovieLink to={movieLink} state={currentLocation}>\n        <MovieImage\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342${poster_path}`\n              : noImage\n          }\n          alt={original_title}\n          width={230}\n          height={345}\n        />\n        {original_title}\n      </StyledMovieLink>\n    </MovieItem>\n  );\n};\n\nMovieLink.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const StyledMoviesList = styled.ul`\n  display: grid;\n  gap: 20px;\n  grid-template-columns: repeat(auto-fill, minmax(185px, 1fr));\n\n  margin: ${({ theme }) => theme.space[0]};\n  padding: ${({ theme }) => theme.space[0]};\n\n  list-style: none;\n`;\n","import PropTypes from 'prop-types';\nimport { MovieLink } from './MovieLink/MovieLink';\nimport { StyledMoviesList } from './MoviesList.styled';\n\nexport const MoviesList = ({ moviesData }) => (\n  <StyledMoviesList>\n    {moviesData.map(movie => (\n      <MovieLink key={movie.id} movie={movie} />\n    ))}\n  </StyledMoviesList>\n);\n\nMoviesList.propTypes = {\n  moviesData: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  margin: ${({ theme }) => theme.space[0]};\n  padding: ${({ theme }) => theme.space[5]} ${({ theme }) => theme.space[0]};\n\n  font-size: ${({ theme }) => theme.fontSizes.l};\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h2`\n  margin: ${({ theme }) => theme.space[0]};\n  padding: ${({ theme }) => theme.space[5]} ${({ theme }) => theme.space[0]};\n\n  font-size: ${({ theme }) => theme.fontSizes.l};\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const HiddenPageTitle = styled.h2`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 100vw;\n  padding: ${({ theme }) => theme.space[4]} 0;\n`;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'api/api';\nimport { Section, Container } from 'components/Shared';\nimport { PageTitle } from 'components/Shared/PageTitle';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Message } from 'components/Shared/Message.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [moviesData, setMoviesData] = useState(null);\n  const [status, setStatus] = useState('pending');\n\n  useEffect(() => {\n    getTrending()\n      .then(result => {\n        setMoviesData(result);\n        setStatus('resolved');\n      })\n      .catch(() => setStatus('rejected'));\n  }, []);\n\n  return (\n    <Section>\n      <Container>\n        <PageTitle>Trending today</PageTitle>\n        {status === 'pending' && <Loader />}\n        {status === 'rejected' && (\n          <Message>Ooops, something went wrong</Message>\n        )}\n        {status === 'resolved' && <MoviesList moviesData={moviesData} />}\n      </Container>\n    </Section>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","getTrending","params","api_key","queryData","status","Error","data","results","getMovies","searchQuery","query","getMovie","movieID","url","getCast","cast","getReviews","MovieItem","styled","theme","colors","lightBG","borders","generic","radii","StyledMovieLink","Link","space","fontWeights","semiBold","transitions","color","mainAccent","MovieImage","whiteBG","MovieLink","movie","id","original_title","poster_path","currentLocation","useLocation","movieLink","to","state","src","noImage","alt","width","height","StyledMoviesList","MoviesList","moviesData","map","Message","fontSizes","l","PageTitle","HiddenPageTitle","Section","useState","setMoviesData","setStatus","useEffect","then","result","catch"],"sourceRoot":""}